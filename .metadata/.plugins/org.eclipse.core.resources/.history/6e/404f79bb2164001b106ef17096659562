package assignment9.prob8;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.function.BinaryOperator;
import java.util.function.Function;

import lesson9.lecture.optional_map.usingoptionals.Person;

public class Main {
	List<OrderItem> orderItems = new ArrayList<>();
	public static void main(String[] args) {
		Main m = new Main();
		m.loadOrderItemData();
		System.out.println("Do any of these Order Items have an order of flowers? " + 
		   m.findProduct("Flowers"));
	}
	
	private boolean findProduct(String prodName) {
//		for(OrderItem item : orderItems) {
//			if(item != null) {
//				Product p=item.getProduct();
//				if(p != null) {
//					String name = p.getProductName();
//					if(name != null) {
//						if(name.equals(prodName)) return true;
//					}
//				}
//			}
//		}
//		return false;
		
		for(OrderItem item : orderItems) {
			Optional<String>productname= Optional.ofNullable(item)
					.map(x->x.getProduct())
					.ofNullable(product)
					.map(y->y.getProductName())
					.ofNullable(productName);
			
			if(productname.equals(prodName)) {
				return true;
			}
			
		}
		return false;
		
		Optional<OrderItem> orderItem=orderItems.stream().forEach(x);
		
		return orderItems.stream().map(x->x.getProduct()).map(y->y.getProductName()).filter(z->z.compareTo(prodName)).if.orElse(false);
	}
	
	private void loadOrderItemData() {
		orderItems.add(new OrderItem(new Product("1016", "Tools", 131.00), 3));
		orderItems.add(new OrderItem(new Product("1017", "Fishing Rod", 111.00), 1));
		orderItems.add(new OrderItem(new Product("1018", "Game of Go",66.00), 2));
		orderItems.add(new OrderItem(new Product("1019", "Flowers", 221.00), 5));
	}
}
